@page "/shoeOverview"
@using Gimpies_Blazor1.Database.Data
@using Gimpies_Blazor1.Database.Models.Entities
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext DbContext
@inject NavigationManager Navigation
@inject IDialogService DialogService
@inject ISnackbar Snackbar
@rendermode InteractiveServer

<PageTitle>Schoenenoverzicht</PageTitle>

<h3>Schoenenoverzicht</h3>

<AuthorizeView Policy="@UserPolicy.View_Shoes">
    <ChildContent>

        @if (shoes == null)
        {
            <p>Het overzicht wordt geladen...</p>
        }
        else if (shoes.Count == 0)
        {
            <p>Er zijn geen schoenen beschikbaar</p>
            <AuthorizeView Policy="@UserPolicy.Add_Shoes">
                <ChildContent Context="AddShoesIfEmptyContext">
                    <button type="button" class="btn btn-primary" @onclick="OpenAddShoeDialog">Schoen toevoegen</button>
                </ChildContent>
            </AuthorizeView>
        }
        else {
        <div class="shoe-grid">
            @foreach (var shoe in shoes)
            {
                <div class="@GetStockClass(shoe.Unit)">
                        <div class="shoe-image">
                            @if (!string.IsNullOrEmpty(shoe.ImageUrl))
                            {
                                <img src="@shoe.ImageUrl" alt="Schoen afbeelding" style="width: 100%; height: auto;" />
                            }
                            else
                            {
                                <span>Geen afbeelding</span>
                            }
                        </div>
                    <div class="shoe-details">
                        <h5>@shoe.Brand.BrandName - @shoe.Model.ModelName</h5>
                        <p><strong>Kleur:</strong> @shoe.Colour.ColourName</p>
                        <p><strong>Maat:</strong> @shoe.Size.SizeValue</p>
                        <p><strong>Prijs:</strong> €@shoe.Value</p>
                        <p><strong>Aantal:</strong> @shoe.Unit</p>
                    </div>
                    <div class="shoe-actions">
                        <AuthorizeView Policy="@UserPolicy.Edit_Shoes">
                            <ChildContent Context="EditShoesContext">
                                <MudButton Color="Color.Error" Variant="Variant.Filled" OnClick="() => OpenEditShoeDialog(shoe)">Bewerken</MudButton>
                            </ChildContent>
                        </AuthorizeView>
                        <AuthorizeView Policy="@UserPolicy.Delete_Shoes">
                            <ChildContent Context="DeleteShoesContext">
                                <MudButton Color="Color.Error" Variant="Variant.Filled" OnClick="() => OpenDeleteShoeDialog(shoe)">Verwijderen</MudButton>
                            </ChildContent>
                        </AuthorizeView>
                            <AuthorizeView Policy="@UserPolicy.Buy_Shoes">
                                <ChildContent Context="BuyShoesContext">
                                    <MudButton Color="Color.Success" Variant="Variant.Filled" OnClick="() => OpenBuyShoesDialog(shoe)">Inkopen</MudButton>
                                </ChildContent>
                            </AuthorizeView>
                            <AuthorizeView Policy="@UserPolicy.Sell_Shoes">
                                <ChildContent Context="SellShoesContext">
                                    <MudButton Color="Color.Success" Variant="Variant.Filled" OnClick="() => OpenSellShoesDialog(shoe)">Verkopen</MudButton>
                                </ChildContent>
                            </AuthorizeView>
                    </div>
                </div>
            }

        </div>
            <AuthorizeView Policy="@UserPolicy.Add_Shoes">
                <ChildContent Context="AddShoesIfEmptyContext">
                    <button type="button" class="btn btn-primary" @onclick="OpenAddShoeDialog">Schoen toevoegen</button>
                </ChildContent>
            </AuthorizeView>
        }
    </ChildContent>
</AuthorizeView>







