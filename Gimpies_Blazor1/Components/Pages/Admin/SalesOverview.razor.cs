// <auto-generated />
using Microsoft.EntityFrameworkCore;

namespace Gimpies_Blazor1.Components.Pages.Admin
{
    public partial class SalesOverview
    {
        private string mostSoldShoe;    // Meest verkochte schoen
        private string leastSoldShoe;   // Minst verkochte schoen
        private decimal totalSales;     // Totale omzet

        protected override async Task OnInitializedAsync()
        {
            // Haal gegevens op voor de meest en minst verkochte schoenen
            var salesData = await DbContext.SalesTransactions
                .Include(st => st.Shoe)  // Laad Shoe
                .ThenInclude(s => s.Brand)  // Laad de Brand van Shoe
                .Include(st => st.Shoe)  // Laad Shoe
                .ThenInclude(s => s.Model)  // Laad het Model van Shoe
                .GroupBy(st => st.ShoeId)
                .Select(group => new
                {
                    ShoeId = group.Key,
                    TotalSold = group.Sum(st => st.Quantity),
                    TotalRevenue = group.Sum(st => st.Quantity * st.Price),
                    Shoe = group.FirstOrDefault().Shoe // Zorg dat Shoe geladen is
                })
                .ToListAsync();

            // Bereken de meest verkochte schoen
            var mostSold = salesData.OrderByDescending(st => st.TotalSold).FirstOrDefault();
            mostSoldShoe = mostSold != null
                ? $"{mostSold.Shoe.Brand.BrandName} {mostSold.Shoe.Model.ModelName} ({mostSold.TotalSold} paar)"
                : "Geen schoenen verkocht.";

            // Bereken de minst verkochte schoen
            var leastSold = salesData.OrderBy(st => st.TotalSold).FirstOrDefault();
            leastSoldShoe = leastSold != null
                ? $"{leastSold.Shoe.Brand.BrandName} {leastSold.Shoe.Model.ModelName} ({leastSold.TotalSold} paar)"
                : "Geen schoenen verkocht.";

            // Bereken de totale omzet
            totalSales = salesData.Sum(st => st.TotalRevenue);
        }
    }
}